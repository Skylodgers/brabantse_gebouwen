<rec-mapping prefix="edm" schemaVersion="5.2.6" locked="true">
  <facts>
    <entry>
      <string>country</string>
      <string>Netherlands</string>
    </entry>
    <entry>
      <string>dataType</string>
      <string></string>
    </entry>
    <entry>
      <string>language</string>
      <string>nl</string>
    </entry>
    <entry>
      <string>type</string>
      <string></string>
    </entry>
    <entry>
      <string>spec</string>
      <string>museum-rotterdam</string>
    </entry>
    <entry>
      <string>orgId</string>
      <string></string>
    </entry>
    <entry>
      <string>schemaVersions</string>
      <string>edm_5.2.6</string>
    </entry>
    <entry>
      <string>baseUrl</string>
      <string>http://data.collectienederland.nl</string>
    </entry>
    <entry>
      <string>dataProviderURL</string>
      <string></string>
    </entry>
    <entry>
      <string>provider</string>
      <string>Rijksdienst voor het Cultureel Erfgoed</string>
    </entry>
    <entry>
      <string>dataProviderUri</string>
      <string>http://id.musip.nl/crm_e39/4892</string>
    </entry>
    <entry>
      <string>rights</string>
      <string>http://creativecommons.org/licenses/by/3.0/</string>
    </entry>
    <entry>
      <string>name</string>
      <string>Museum Rotterdam</string>
    </entry>
    <entry>
      <string>dataProvider</string>
      <string>Museum Rotterdam</string>
    </entry>
  </facts>
  <functions/>
  <dyn-opts/>
  <node-mappings>
    <node-mapping inputPath="/input" outputPath="/edm:RDF"/>
    <node-mapping inputPath="/input" outputPath="/edm:RDF/ore:Aggregation/@rdf:about">
      <groovy-code>
        <string>
                            &quot;${baseUrl}/resource/aggregation/${spec}/${_uniqueIdentifier.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input" outputPath="/edm:RDF/ore:Aggregation/edm:aggregatedCHO/@rdf:resource">
      <groovy-code>
        <string>
                                &quot;${baseUrl}/resource/document/${spec}/${_uniqueIdentifier.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/facts/dataProvider" outputPath="/edm:RDF/ore:Aggregation/edm:dataProvider"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:identifier" outputPath="/edm:RDF/ore:Aggregation/edm:isShownAt/@rdf:resource"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:thumbnail" outputPath="/edm:RDF/ore:Aggregation/edm:isShownBy/@rdf:resource"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:thumbnail" outputPath="/edm:RDF/ore:Aggregation/edm:object/@rdf:resource"/>
    <node-mapping inputPath="/facts/provider" outputPath="/edm:RDF/ore:Aggregation/edm:provider"/>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/ore:Aggregation/edm:rights/@rdf:resource">
      <groovy-code>
        <string>https://rightsstatements.org/page/InC/1.0/</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input" outputPath="/edm:RDF/edm:ProvidedCHO/@rdf:about">
      <groovy-code>
        <string>
                            &quot;${baseUrl}/resource/document/${spec}/${_uniqueIdentifier.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:creator" outputPath="/edm:RDF/edm:ProvidedCHO/dc:creator"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:date" outputPath="/edm:RDF/edm:ProvidedCHO/dc:date"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:description" outputPath="/edm:RDF/edm:ProvidedCHO/dc:description"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:identifier" outputPath="/edm:RDF/edm:ProvidedCHO/dc:identifier"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:publisher" outputPath="/edm:RDF/edm:ProvidedCHO/dc:publisher"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:source" outputPath="/edm:RDF/edm:ProvidedCHO/dc:source"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:subject" outputPath="/edm:RDF/edm:ProvidedCHO/dc:subject"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:title" outputPath="/edm:RDF/edm:ProvidedCHO/dc:title"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:type" outputPath="/edm:RDF/edm:ProvidedCHO/dc:type"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:date" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:created"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/size" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:extent"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:format" outputPath="/edm:RDF/edm:ProvidedCHO/dcterms:medium"/>
    <node-mapping inputPath="/facts/type" outputPath="/edm:RDF/edm:ProvidedCHO/edm:type"/>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:thumbnail" outputPath="/edm:RDF/edm:WebResource/@rdf:about">
      <groovy-code>
        <string>_input.record * { _record -&gt;</string>
        <string>if (!_record.getValueNodes(&quot;dcthumbnail&quot;).isEmpty()) {</string>
        <string>def localId = _record.getValueNodes(&quot;dcthumbnail&quot;).first().replaceAll(&quot;\\\\&quot;, &quot;/&quot;)</string>
        <string>&quot;${localId}&quot;.sanitizeURI()</string>
        <string>}</string>
        <string>}</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:thumbnail" outputPath="/edm:RDF/edm:WebResource/nave:thumbLarge"/>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DcnResource/nave:province">
      <groovy-code>
        <string>&apos;Zuid-Holland&apos;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:thumbnail" outputPath="/edm:RDF/nave:DelvingResource/nave:thumbnail">
      <groovy-code>
        <string>&quot;${_dcthumbnail.sanitizeURI()}&quot;</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/input/record/metadata/oai_dc:dc/dc:format" outputPath="/edm:RDF/nave:DelvingResource/nave:material"/>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:featured">
      <groovy-code>
        <string>false</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:allowDeepZoom">
      <groovy-code>
        <string>true</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:allowLinkedOpenData">
      <groovy-code>
        <string>true</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:allowSourceDownload">
      <groovy-code>
        <string>false</string>
      </groovy-code>
    </node-mapping>
    <node-mapping inputPath="/constant" outputPath="/edm:RDF/nave:DelvingResource/nave:public">
      <groovy-code>
        <string>true</string>
      </groovy-code>
    </node-mapping>
  </node-mappings>
</rec-mapping>